apiVersion: v1
items:
- apiVersion: v1
  kind: Secret
  stringData:
    identities.yaml: |-
      credentials:
        - username: authorized
          password: Authorized-password!
          roles:
          - authorized-role
        - username: unauthorized
          password: Unauthorized-password!
  metadata:
    name: infinispan-server-credentials
    labels:
      app: rhdg-ocp-demo-infinispan
      app.kubernetes.io/component: rhdg-ocp-demo-infinispan
      app.kubernetes.io/instance: rhdg-ocp-demo-infinispan
  type: Opaque
- apiVersion: infinispan.org/v1
  kind: Infinispan
  metadata:
    name: rhdg-ocp-demo-infinispan
    labels:
      app: rhdg-ocp-demo-infinispan
      app.kubernetes.io/component: rhdg-ocp-demo-infinispan
      app.kubernetes.io/instance: rhdg-ocp-demo-infinispan
  spec:
    dependencies:
      volumeClaimName: infinispan-libs
    security:
      authorization:
        roles:
          - name: authorized-role
            permissions:
            - ALL
        enabled: true
      endpointEncryption:
        type: None
        clientCert: None
      endpointAuthentication: true
      endpointSecretName: infinispan-server-credentials
    service:
      type: DataGrid
    replicas: 2
- apiVersion: infinispan.org/v2alpha1
  kind: Cache
  metadata:
    name: test-cache
    labels:
      app: rhdg-ocp-demo-infinispan
      app.kubernetes.io/component: rhdg-ocp-demo-infinispan
      app.kubernetes.io/instance: rhdg-ocp-demo-infinispan
  spec:
    clusterName: rhdg-ocp-demo-infinispan
    name: test-cache
    template: >-
      <distributed-cache mode="SYNC" statistics="true">
          <security>
              <authorization roles="authorized-role"/>
          </security>
          <persistence>
              <store class="com.redhat.rhdg.demo.server.loader.CustomStore" segmented="false"/>
          </persistence>
          <encoding>
              <key media-type="application/x-protostream"/>
              <value media-type="application/x-protostream"/>
          </encoding>
      </distributed-cache>
kind: List
metadata: {}
